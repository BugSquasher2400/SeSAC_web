<!DOCTYPE html>
<html lang="ko">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>ajax, axios, fetch</title>
    <style>
      .result {
      }
    </style>
    <!-- Jquery CDN -->
    <script
      src="https://code.jquery.com/jquery-3.7.1.min.js"
      integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo="
      crossorigin="anonymous"
    ></script>
    <!-- axios cdn -->
    <script src="https://unpkg.com/axios/dist/axios.min.js"></script>
  </head>
  <body>
    <h1>동적폼 전송 연습하기</h1>
    <form name="register">
      <label for="name">이름</label>
      <input type="text" name="name" id="name" required />
      <br />
      <span>성별</span>
      <input type="radio" id="male" name="gender" value="남성" required />
      <label for="male">남자</label>

      <input type="radio" id="female" name="gender" value="여성" />
      <label for="female">여자</label>
      <br />
      <br />
      <button type="button" onclick="ajaxGet()">Ajax GET 제출</button>
      <button type="button" onclick="ajaxPost()">Ajax POST 제출</button>
      <br /><br />
      <button type="button" onclick="axiosGet()">axios GET 제출</button>
      <button type="button" onclick="axiosPost()">axios POST 제출</button>
      <br /><br />
      <button type="button" onclick="FetchGet()">Fetch GET 제출</button>
      <button type="button" onclick="fetchPost()">Fetch POST 제출</button>
    </form>
    <hr />
    <div class="result"></div>
    <a href="/api">고양이</a>
    <a href="/practice">실습1</a>
    <a href="/login">실습2 로그인</a>
    <script>
      const resultBox = document.querySelector(".result");
      function ajaxGet() {
        const form = document.forms["register"]; //폼 선택
        console.log(form.name.value);
        // console.log(form.name);
        // console.log(form.gender.length);
        // console.log(form.gender.value);

        // buuton type button 에서는 required 동작하지 않음

        // if (form.name.value.trim() === "") {
        //   alert("이름을 입력하세요");
        //   return;
        // }

        // if (form.gender.value === "") {
        //   alert("성별을 선택해주세요.");
        //   return;
        // }

        // ajax 요청
        // 보낼 데이터 객체 형태로 만들기
        const data = {
          name: form.name.value, // 이름
          gender: form.gender.value, //여성, 남성
        };

        // AJAX 사용
        $.ajax({
          type: "get", // 어떤 메소드로 보낼건지 get, post, delete...
          url: "/ajax", // form 의 action 에 해당하는 곳
          data: data, //서버로 넘겨줄 데이터

          //통신이 성공했을때
          success: function (res) {
            console.log(res);
            resultBox.textContent = `get / ajax 요청완료 ${res.name}의 성별은 ${res.gender}`;
          },
          error: function (err) {
            console.log("error:", err);
          },
        });
      }
      function ajaxPost() {
        const form = document.forms["register"]; //폼 선택
        const data = {
          name: form.name.value, // 이름
          gender: form.gender.value, //여성, 남성
        };

        $.ajax({
          type: "post",
          url: "/ajax",
          data: data,

          success: function (data) {
            console.log(data);
            resultBox.textContent = `POST /ajax 요청완료 ${data.name}의 성별은 ${data.gender}입니다`;
          },

          error: function (err) {
            console.log(err);
          },
        });
      }

      async function axiosGet() {
        const form = document.forms["register"]; //폼 선택
        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };

        // 유효성 검사 cheakValidity()
        // required 가 있으면 기입이 되었는지 안되었는지 검사해줌
        //- required 속성이 없는 항목 > true 를 무조건 반환
        //- required 속성이 있는 항목 기입을 했다면 true 하지않았다면 false를 반환
        console.log(form.name.checkValidity()); //input[name="name"]
        console.log(form.gender[0].checkValidity()); //input[name="name"]

        // if (!form.name.checkValidity()) {
        //   //   resultBox.textContent = "이름을 입력해주세요";
        //   resultBox.textContent = form.name.validationMessage; // 이 입력란을 작성하세요 기능
        //   return;
        // }

        // if (!form.gender.checkValidity()) {
        //   //   resultBox.textContent = form.gender[0].validationMessage;
        //   return;
        // }

        // axios 요청

        // axios({
        //   method: "get",
        //   url: "/axios",
        //   params: data, //get 요청일땐 params
        // }); //then ~ catch 사용
        // .then(function (res) {
        //   // 통신에 성공했을때
        //   // 키,값 객체 그대로 가져오지않음
        //   // console.log(res);
        //   console.log("--------------------");
        //   console.log(res.data); // 서버에서 준 데이터
        //   // console.log(res.status);
        //   // console.log(res.statusText);
        //   // console.log(res.headers);
        //   resultBox.textContent = `Get / axios 요청완료 ${res.data.name}의 성별은 ${res.data.gender}`;
        //   resultBox.style.color = "green";
        // })
        // .catch(function (err) {
        //   // 통신에 실패했을때
        //   console.error(err);
        // });

        //2.async ~ await
        // 에러처리는 try ~ catch 문을 사용해줘야한다
        try {
          const res = await axios({
            method: "get",
            url: `/axios?name=${data.name}&gender=${data.gender}`,
          });
          console.log(res.data);
          const { name, gender } = res.data;
          resultBox.textContent = `${name}의 성별은 ${gender}`;
          resultBox.style.color = "green";
        } catch (err) {
          console.error(err);
        }
      }

      async function axiosPost() {
        const form = document.forms["register"];
        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };

        // 에러처리
        try {
          const res = await axios({
            method: "post",
            url: "/axios",
            data: data,
          });

          const { name: 이름, gender: 성별 } = res.data;
          resultBox.textContent = `Post 요청완료 ${이름} 이며 ${성별}`;
          resultBox.style.color = "pink";
          console.log(res);
          console.log(res.data);
        } catch (err) {
          console.error(err);
        }
      }

      function FetchGet() {
        const form = document.forms["register"];
        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };

        // fetch('/fetch',{
        //   method: "get",

        // })

        fetch(`/fetch?name=${data.name}&gender=${data.gender}`)
          .then(function (res) {
            console.log(res);
            //서버에서 넘어온  문자열을 뽑아내기위해 메소드 사용
            // text() 객체에서 텍스트 본문을 뽑아내기 위해
            return res.json();
            // json() 객체에서 오브젝트 본문을 뽑아내기 위해)
          })
          .then((txt) => {
            console.log(txt);
            resultBox.textContent = `get / fetch 요청완료!! ${txt.name} 의 성별은 ${txt.gender}입니다`;
            resultBox.style.color = "limegreen";
          })
          .catch((err) => {
            console.log(err);
          });
      }

      async function fetchPost() {
        const form = document.forms["register"];
        const data = {
          name: form.name.value,
          gender: form.gender.value,
        };

        try {
          const res = await fetch("/fetch", {
            method: "post",
            body: JSON.stringify(data), //JSON 형식으로 보내야함
            headers: {
              //전송타입을 명시해야함
              "content-Type": "application/json",
            },
          });

          // json, text 는 시간이 걸리는 작업
          const result = await res.json();
          const { name, gender } = result;
          resultBox.textContent = `POST /fetch 요청결과: ${name}이고 성별은 ${gender}`;
          resultBox.style.color = "gray";
          console.log(result);
        } catch (err) {
          console.log(err);
        }
      }
    </script>
  </body>
</html>
