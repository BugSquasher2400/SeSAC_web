/* transion vs animation
transfion
-자연스러운 변경을 위해 설정
-hover, onclick 등 동작(이벤트)이 발생되었을땨

animation
- 중간 step 들을 지정하여 보다 세밀하게 스타일 전환 가능
- @keyframes 로 이루어짐
    속성순서 name 과 duration은 필수 속성
    animation: name duration timing-function delay iteration-count direction fill-mode;

    name @keyfream로 만들어진 애니메이션 이름
duration 한 사이클의 애니메이션이 어떤 시간 간격으로 진행될지 설정 (단위s)
timing-function 중간 상태의 전화을 어떤 시간 간격으로 진행할지 설정
delay 애니메이션 시작을 지연시킬 수 있는 속성 기본값은 0s
iteration-count 애니메이션이 반복되는 횟수 기본값은 1
direction 애니메이션이 반복될때 진행방향 설정 normal, revers, alternate, alternate-revers


*/

.box{
    width: 100px;
    height: 100px;
    background-color: skyblue;
    position: relative;

    animation-name: my-ani;
    animation-duration: 2s;
    animation-delay: 1s;
    animation-iteration-count: infinite;
    animation-timing-function: linear;
}

/* box의 애니메이션 */
@keyframes my-ani{
    0%{
        left: 0px;
    }
    25%{
        left: 200px;
    }
    50%{
        left: 400px;
    }
    75%{
        left: 200px;
    }
    100%{
        left: 0px;
    }
}

.bounce-ball1{
    position: absolute;
    width: 50px;
    height: 50px;
    border-radius: 50%;
    background-color: pink;
    top: 0px;
    left: 250px;

    /* 공이 떨어질때
        -빠름 > 느림
        공이 튀어 오를 때
        - 느려졌다가 빠름
    */

    animation: bounce1 1s ease-out infinite alternate;
}


/* normal: from > to, from > to */

@keyframes bounce1{
    from{
        top: 300px;
    }

    to{
        top: 0px;
    }
}

.bounce-ball2{
    width: 50px;
    height: 50px;
    border-radius: 50%;
    background-color: #000;
    position: absolute;
    bottom: 0;

    animation: bounce2 2s infinite;
}

@keyframes bounce2{
    from, to{
        bottom: 0;
        width: 55px;
        /* 천천히 속도를 줄이도록 */
        animation-timing-function: ease-out;
    }

    50%{
        width: 50px;
        bottom: 300px;
        /* 빨라지도록 */
        animation-timing-function: ease-in;
    }
}
